import type { Properties as CSSProperties } from 'csstype';
import type { PartialDeep } from '@arwes/tools';
export declare type ThemeSettingsMultiplierFunction = (index: number) => number;
export declare type ThemeSettingsMultiplier = number | number[] | ThemeSettingsMultiplierFunction;
export declare type ThemeSettingsUnitFunction = (index: number) => string;
export declare type ThemeSettingsUnit = string[] | ThemeSettingsUnitFunction;
export declare type ThemeSettingsColor = Array<[number, number, number, number?] | string> | ((index: number) => [number, number, number, number?] | string);
export declare type ThemeSettingsStyle = ThemeStyleValue[];
export interface ThemeSettingsBreakpointsKeyListItem {
    key: string;
    value: string;
}
export declare type ThemeSettingsBreakpoints = string[] | ThemeSettingsBreakpointsKeyListItem[];
export declare type ThemeMultiplier = (index: number) => number;
export declare type ThemeUnit = (index: number | number[]) => string;
export interface ThemeColorOptions {
    alpha?: number;
}
export declare type ThemeColor = (index: number, options?: ThemeColorOptions) => string;
export declare type ThemeStyleValue = CSSProperties;
export declare type ThemeStyle = (index: number) => ThemeStyleValue;
export interface ThemeBreakpoints {
    settings: ThemeSettingsBreakpoints;
    up: (key: string | number) => string;
    down: (key: string | number) => string;
    between: (startKey: string | number, endKey: string | number) => string;
}
export interface ThemeCreatorStructure {
    [key: string]: 'multiplier' | 'unit' | 'color' | 'style' | 'breakpoints' | 'other' | ThemeCreatorStructure;
}
export interface ThemeCreatorOptions {
    getCacheColorScheme: () => string | null | undefined;
    setCacheColorScheme: (colorScheme: string) => void;
}
export declare type ThemeCreator<ThemeSettings, Theme> = (themeSettingsExtensions?: PartialDeep<ThemeSettings> | Array<PartialDeep<ThemeSettings> | undefined> | undefined) => Theme;
