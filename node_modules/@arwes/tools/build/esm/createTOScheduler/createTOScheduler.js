const ID_DEFAULT = '';
function createTOScheduler() {
    const ledger = new Map();
    const isPending = (id = ID_DEFAULT) => {
        return ledger.has(id);
    };
    const stop = (id = ID_DEFAULT) => {
        const cancelSchedule = ledger.get(id);
        if (cancelSchedule) {
            cancelSchedule();
        }
        ledger.delete(id);
    };
    const stopAll = () => {
        Array.from(ledger.keys()).forEach(stop);
    };
    const start = (a, b, c) => {
        const id = c ? a : ID_DEFAULT;
        const delay = (c ? b : a) * 1000;
        const callback = c || b;
        stop(id);
        const timeoutId = setTimeout(() => {
            ledger.delete(id);
            callback();
        }, delay);
        ledger.set(id, () => {
            clearTimeout(timeoutId);
        });
    };
    return Object.freeze({ isPending, stop, stopAll, start });
}
export { createTOScheduler };
