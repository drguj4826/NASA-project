declare module '@arwes/animator/constants' {
  import type { AnimatorSettingsMachine } from '@arwes/animator/types';
  const ANIMATOR_DEFAULT_KEYS: {
      readonly ENTERED: "entered";
      readonly ENTERING: "entering";
      readonly EXITING: "exiting";
      readonly EXITED: "exited";
      readonly ENTER_START: "enterStart";
      readonly ENTER_END: "enterEnd";
      readonly EXIT_START: "exitStart";
      readonly EXIT_END: "exitEnd";
      readonly PARALLEL: "parallel";
      readonly SEQUENCE: "sequence";
      readonly STAGGER: "stagger";
  };
  const ANIMATOR_DEFAULT_MACHINE: AnimatorSettingsMachine;
  const ANIMATOR_DEFAULT_DURATION: Readonly<{
      enter: 0.4;
      exit: 0.4;
      delay: 0;
      offset: 0;
      stagger: 0.04;
      interval: 4;
  }>;
  const ANIMATOR_DEFAULT_MANAGER = "parallel";
  const ANIMATOR_DEFAULT_PROPS: {
      machine: AnimatorSettingsMachine;
      duration: Readonly<{
          enter: 0.4;
          exit: 0.4;
          delay: 0;
          offset: 0;
          stagger: 0.04;
          interval: 4;
      }>;
      manager: string;
  };
  export { ANIMATOR_DEFAULT_KEYS, ANIMATOR_DEFAULT_MACHINE, ANIMATOR_DEFAULT_DURATION, ANIMATOR_DEFAULT_MANAGER, ANIMATOR_DEFAULT_PROPS };

}
declare module '@arwes/animator/createAnimatorSystem/createAnimatorSystem' {
  import type { AnimatorSystem } from '@arwes/animator/types';
  const createAnimatorSystem: () => AnimatorSystem;
  export { createAnimatorSystem };

}
declare module '@arwes/animator/createAnimatorSystem/index' {
  export * from '@arwes/animator/createAnimatorSystem/createAnimatorSystem';

}
declare module '@arwes/animator/index' {
  export * from '@arwes/animator/types';
  export * from '@arwes/animator/constants';
  export * from '@arwes/animator/createAnimatorSystem/index';

}
declare module '@arwes/animator/types' {
  import type { TOScheduler } from '@arwes/tools';
  export interface AnimatorControl {
      getSettings: () => AnimatorSettings;
      setDynamicSettings: (settings: AnimatorSettings | null) => void;
      getForeignRef: () => unknown;
      setForeignRef: (ref: unknown) => void;
  }
  export type AnimatorSystemNodeId = number;
  export type AnimatorSystemNodeSubscriber = (node: AnimatorSystemNode) => void;
  export interface AnimatorSystemNode {
      id: AnimatorSystemNodeId;
      control: AnimatorControl;
      parent?: AnimatorSystemNode;
      children: Set<AnimatorSystemNode>;
      subscribers: Set<AnimatorSystemNodeSubscriber>;
      scheduler: TOScheduler;
      context: Record<string, unknown>;
      getState: () => string;
      send: (action: string) => void;
      onSettingsChange: () => void;
  }
  export interface AnimatorSystem {
      setup: (control: AnimatorControl) => AnimatorSystemNode;
      register: (parent: AnimatorSystemNode, control: AnimatorControl) => AnimatorSystemNode;
      unregister: (node: AnimatorSystemNode) => void;
  }
  export interface AnimatorSettingsMachine {
      initialState: string;
      states: {
          [state: string]: {
              onEntry?: {
                  execute?: (node: AnimatorSystemNode) => void;
                  schedule?: (node: AnimatorSystemNode) => {
                      duration: number;
                      action: string;
                  };
              };
              onActions?: {
                  [action: string]: string;
              };
          };
      };
      onCreate?: (node: AnimatorSystemNode) => void;
      onSettingsChange?: (node: AnimatorSystemNode) => void;
      onTransition?: (node: AnimatorSystemNode) => void;
      onInitialTransition?: (node: AnimatorSystemNode) => void;
  }
  export interface AnimatorSettings {
      machine?: AnimatorSettingsMachine;
      duration?: Record<string, number>;
      onTransition?: (node: AnimatorSystemNode) => void;
      active?: boolean;
      merge?: boolean;
      manager?: string;
      combine?: boolean;
  }
  export interface AnimatorInterface {
      system: AnimatorSystem;
      node: AnimatorSystemNode;
  }

}

declare module '@arwes/animator' {
  import main = require('@arwes/animator/index');
  export = main;
}
